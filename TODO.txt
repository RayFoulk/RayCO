+-------------------------------------------------------------------------+
DONE:

* refactor chain/link to not use empty origin node
* verify all tests still pass
* move all function pointers into chain typedef and make static
  initialized from factory function
* refactor into pimpl private data pattern
* fix chain_join
* MUST migrate unit tests to a different framework
    * still must be lightweight, supportable by embedded targets.
    * must support multiple test*.c files, from one main is OK
* add PRNG library (for targets that don't have one already)
    * xoshiro / xoroshiro generators and the PRNG shootout http://prng.di.unimi.it/
* introduce bytes object as managed string / byte array
* adjust makefile for so, a lib targets
* consider returning int instead of void * for shellcmd handlers
* Implement help command
  * Need to figure out console/stdout thread protection
  * able to pass a FILE * around or need an object with locking?
* BUG: setting log file name always results in garbage file
* BUG alias bogus log, unalias log, help crashes!!!
  * logic is inverted - fix it twice!!
  (problem was original non-alias command was deleted, leaving
   invalid unmanaged pointer to subcmds in aliased cmd)

+-------------------------------------------------------------------------+
MOSTLY DONE / SUPERCEDED:

~ write unit tests for all chain functions, pass and fail, build only in TEST mode
X pass in link dtor function to delete and destroy, do not cache
  (This is now covered by notional collect_t

+-------------------------------------------------------------------------+
TODO:

- finish bytes_t object calls read()/write() (others?) and complete unit tests
  - need a 'find' substring match returning offset & size.  left-to-right and vice versa
  - need a replace() function to replace at location,  also insert() and remove()
- dumb down to 32bits for embedded systems that don't support 64 bit integers
- app: migrate over to sink project and refactor
- fix mem zero optimization problem (volatile?)
  - see URL commend in utils.c
- add license target to makefile to update all src
- migrate selected useful librmf objects
- constify return values, pointers functions
- add install and uninstall phony targets
- consider other builtin commands: print, (dereference object???)
- need to introduce a thread-safe console
  - support input as well as output?  how to support linenoise?
- need to introduce scallop procedures
  - these are distinct from scripts, and necessary for specific projects
  - will likely need to support variables, probably in string format
  - check if cc65 supports env put/get, make design decision
  - need an 'alias' command to store routines as type definitions -- semantics
- refactor bytes_t interface to have _raw() versus plain, use bytes with plain.
- Option in blammo logger for newline style \r\n or \n
  - Maybe require escape/unescape functionality in bytes_t
  - else present as a simple 'universal newline / optional' option
- scrape 'TODO's out of source and paste them here.
- Needed: bytes_t is needed for:
  * dynamic contextual prompt
  * appendable / formatted help report
  - routine names? / routine lines
  - dynamic reprint buffers in console

- Rework console->reprint()
  - use dynamically sized bytes_t
  - refactor how it works, writing substrings-at-once
- Enable command history, with options, when linenoise is available.
- console to borrow message type enum from blammo, but with it's own strings.
- break out all builtin commands into scallblt.c/h or scallop_builtin
  - need to add console() public method, and use commands() instead of priv
  - only need to export one function and that is the register_builtins()
    and pass in the base command tree pointer.  all else can be static.

+-------------------------------------------------------------------------+
TODOs FROM CODE:

./test/test_bytes.c:126:    // TODO: Test some common types,
./test/test_bytes.c:146:    // TODO: Turns out this does exactly what one
./test/test_bytes.c:190:    // TODO: more cases, overlapping
./src/scallop.h:61:    // TODO: get/set prompt
./src/bytes.c:95:        // TODO: Deal with compiler optimization problem
./src/bytes.c:139:        // TODO: Deal with compiler optimization problem
./src/bytes.c:227:    // TODO: Impose some reasonable size checks here?  get available free
./src/bytes.c:244:    // TODO: Impose some reasonable size checks here?  get available free
./src/scallop.c:188:        // TODO possibly store result in priv, or else report on console
./src/scallop.c:352:        // of bugs in this code.  TODO: harden it up later with some
./src/scallop.c:459:    // TODO: Make these constants or defines
./src/scallop.c:713:        // TODO possibly store result in priv, or else report on console
./src/chain.c:160:    // TODO: Likely this is redundant
./src/scallcmd.c:283:    // TODO: Append stuff about THIS command in the report???
./src/scallcmd.c:308:        // TODO: expand helptext with realloc
./src/bytes.h:64:    // TODO: how to handle whther the string needs to be un-escaped or not?
./src/bytes.h:65:    // TODO: manual escape/unescape calls for this
./src/bytes.h:82:    // TODO: Notional Functions
./src/bytes.h:91:    // TODO: Stubbed Functions

+-------------------------------------------------------------------------+
FIXMEs FROM CODE:

./test/test_bytes.c:186:    // FIXME: Disable until implemented
./test/test_chain.c:278:    BLAMMO(ERROR, "FIXME: TEST NOT IMPLEMENTED");
./src/scallop.c:60:    // FIXME: Eventually make this more dynamic
./src/chain.c:352:    // FIXME: Switch to qsort_r() if available
./src/scallcmd.c:160:    // FIXME: Danger of buffer overrun here.
./src/scallcmd.c:301:        // FIXME: Console output versus blammo output
